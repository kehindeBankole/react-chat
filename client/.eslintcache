[{"C:\\Users\\kehinde\\Desktop\\socket\\client\\src\\index.js":"1","C:\\Users\\kehinde\\Desktop\\socket\\client\\src\\reportWebVitals.js":"2","C:\\Users\\kehinde\\Desktop\\socket\\client\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":3206,"mtime":1620050333121,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"gcs1x5",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\kehinde\\Desktop\\socket\\client\\src\\index.js",[],["16","17"],"C:\\Users\\kehinde\\Desktop\\socket\\client\\src\\reportWebVitals.js",[],"C:\\Users\\kehinde\\Desktop\\socket\\client\\src\\App.js",["18","19"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\nfunction App() {\n  const [message, setmessage] = useState(\"\");\n  const [id, setid] = useState(\"\");\n  const [msg, setmsg] = useState([]);\n  const [msgwelcome, setmsgwelcome] = useState([]);\n  const socketRef = useRef();\n  const textRef = useRef();\n  // const socket = io(\"/\");\n  useEffect(() => {\n    socketRef.current = io(\"/\");\n    // socket = io(\"/\");\n    socketRef.current.on(\"id\", (id) => {\n      setid(id);\n    });\n    socketRef.current.on(\"message\", (message) => {\n      console.log(message);\n      setmsg((oldmsg) => [...oldmsg, message]);\n      document.getElementsByClassName(\n        \"text\"\n      )[0].scrollTop = document.getElementsByClassName(\"text\")[0].scrollHeight;\n    });\n\n    socketRef.current.on(\"messagewelcome\", (message) => {\n      setmsgwelcome((oldmsg) => [...oldmsg, message]);\n      // document.getElementsByClassName(\n      //   \"text\"\n      // )[0].scrollTop = document.getElementsByClassName(\"text\")[0].scrollHeight;\n    });\n  }, []);\n  function sendmessage(e) {\n    e.preventDefault();\n\n    //emit message to server\n    socketRef.current.emit(\"chatMessage\", message);\n    console.log(message);\n  }\n  return (\n    <>\n      <div className=\"text\">\n        {/* {msgwelcome.map((d) => (\n          <div>{d.text}</div>\n        ))} */}\n        {/* <div className=\"bg\">\n          <div className=\"first\">\n            {msg.map((d, i) => {\n              if (d.id === id) {\n                return (\n                  <div className=\"\" style={{ padding: \"10px\" , backgroundColor:\"blue\"}} key={i}>\n                    {d.text}\n                \n                  </div>\n                );\n              }\n            })}\n          </div>\n          <div className=\"second\">\n            {msg.map((d, i) => {\n              if (d.id !== id) {\n                return (\n                  <div className=\"secondcontent\" style={{ padding: \"10px\" , backgroundColor:\"black\" }} key={i}>\n                    {d.text}\n                \n                  </div>\n                );\n              }\n            })}\n          </div>\n        </div>  */}\n\n        <div\n          style={{\n            flexDirection: \"column\",\n            display: \"flex\",\n            height: \"500px\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {\n            msg.map((d)=>{\n              if(d.id===id){\n                return(\n                  <div style={{display:'flex' , justifyContent:'flex-end' , backgroundColor:'blue'}}>\n                    {d.text}\n                  </div>\n                )\n              }\n              return(\n                <div style={{justifyContent:'flex-start' , backgroundColor:'purple'}}>\n                  {d.text}\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n      <form>\n        <div className=\"input\">\n          {\" \"}\n          <input type=\"text\" onChange={(e) => setmessage(e.target.value)} />\n        </div>\n        <div className=\"sends\">\n          {\" \"}\n          <button className=\"send\" onClick={sendmessage}>\n            SEND\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default App;\n",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":8,"column":10,"nodeType":"26","messageId":"27","endLine":8,"endColumn":20},{"ruleId":"24","severity":1,"message":"28","line":10,"column":9,"nodeType":"26","messageId":"27","endLine":10,"endColumn":16},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'msgwelcome' is assigned a value but never used.","Identifier","unusedVar","'textRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]